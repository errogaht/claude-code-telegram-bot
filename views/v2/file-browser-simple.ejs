<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, viewport-fit=cover">
    <title>üìÅ File Browser - Vue Version</title>
    
    <style>
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif;
            margin: 0; padding: 10px; background: #f5f5f5; 
            min-height: 100vh; overflow-x: hidden;
        }
        .container { max-width: 1200px; margin: 0 auto; background: white; border-radius: 8px; padding: 20px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        .header { border-bottom: 1px solid #e1e1e1; padding-bottom: 15px; margin-bottom: 20px; }
        .back-link { display: inline-block; margin-bottom: 15px; color: #666; text-decoration: none; padding: 8px 12px; background: #f8f9fa; border-radius: 4px; }
        .back-link:hover { color: #007cba; background: #e9ecef; }
        .breadcrumbs { color: #666; margin-bottom: 10px; }
        .breadcrumbs a { color: #007cba; text-decoration: none; }
        .breadcrumbs a:hover { text-decoration: underline; }
        .file-list { border-collapse: collapse; width: 100%; }
        .file-list th, .file-list td { padding: 12px; text-align: left; border-bottom: 1px solid #e1e1e1; }
        .file-list th { background: #f8f9fa; font-weight: 600; }
        .file-item { display: flex; align-items: center; }
        .file-icon { width: 20px; margin-right: 10px; font-size: 16px; }
        .file-name { color: #333; text-decoration: none; }
        .file-name:hover { color: #007cba; }
        .directory { color: #007cba; font-weight: 500; }
        .vue-badge {
            display: inline-block; background: linear-gradient(135deg, #4FC08D 0%, #42b883 100%);
            color: white; padding: 4px 12px; border-radius: 12px; font-size: 0.8em;
            font-weight: 600; margin-left: 10px;
        }
        .debug-info {
            background: #f8f9fa; padding: 15px; border-radius: 8px; margin: 20px 0;
            border-left: 4px solid #4FC08D; font-family: monospace; font-size: 14px;
        }
        .file-row:hover { background-color: #f8f9fa; }
        
        @media (max-width: 768px) { 
            .container { padding: 10px; margin: 10px; }
            .file-list { font-size: 14px; }
            .file-list td, .file-list th { padding: 8px 5px; }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <a href="/v2" class="back-link">‚Üê Vue Home</a>
            <h1>üìÅ File Browser <span class="vue-badge">Vue.js</span></h1>
            
            <div class="breadcrumbs">
                <% if (!currentPath) { %>
                    Project Root
                <% } else { %>
                    <a href="/v2/files">Project Root</a>
                    <% 
                    const parts = currentPath.split('/').filter(part => part);
                    let buildPath = '';
                    for (const part of parts) {
                        buildPath = buildPath ? buildPath + '/' + part : part;
                    %>
                        / <a href="/v2/files?path=<%= encodeURIComponent(buildPath) %>"><%= part %></a>
                    <% } %>
                <% } %>
            </div>
            
            <% if (currentPath) { %>
                <% 
                const parentPath = currentPath.includes('/') ? currentPath.substring(0, currentPath.lastIndexOf('/')) : '';
                %>
                <a href="/v2/files?path=<%= encodeURIComponent(parentPath) %>" class="back-link">‚Üê Back</a>
            <% } %>
        </div>
        
        <div class="debug-info">
            <strong>üîß Debug Info:</strong><br>
            Current Path: "<%= currentPath || 'root' %>" | 
            Directories: <%= directories.length %> | 
            Files: <%= files.length %>
        </div>
        
        <table class="file-list">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Size</th>
                    <th>Modified</th>
                </tr>
            </thead>
            <tbody>
                <% directories.forEach(dir => { %>
                    <tr class="file-row">
                        <td>
                            <div class="file-item">
                                <span class="file-icon">üìÅ</span>
                                <a href="/v2/files?path=<%= encodeURIComponent(dir.path) %>" class="file-name directory"><%= dir.name %>/</a>
                            </div>
                        </td>
                        <td><%= dir.size %></td>
                        <td><%= dir.modified %></td>
                    </tr>
                <% }); %>
                <% files.forEach(file => { %>
                    <tr class="file-row">
                        <td>
                            <div class="file-item">
                                <span class="file-icon">üìÑ</span>
                                <a href="/v2/files/view?path=<%= encodeURIComponent(file.path) %>" class="file-name"><%= file.name %></a>
                            </div>
                        </td>
                        <td><%= file.size %></td>
                        <td><%= file.modified %></td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>
    
    <script>
        console.log('File browser loaded successfully');
        console.log('Directories:', <%= directories.length %>);
        console.log('Files:', <%= files.length %>);
        
        // Simple token management for links
        function addTokenToLinks() {
            const urlParams = new URLSearchParams(window.location.search);
            const token = urlParams.get('token');
            if (token) {
                const links = document.querySelectorAll('a[href^="/v2"]');
                links.forEach(link => {
                    const url = new URL(link.href, window.location.origin);
                    if (!url.searchParams.has('token')) {
                        url.searchParams.set('token', token);
                        link.href = url.toString();
                    }
                });
            }
        }
        
        document.addEventListener('DOMContentLoaded', addTokenToLinks);
    </script>
</body>
</html>