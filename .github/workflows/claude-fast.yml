name: Claude Code (Fast with Pre-built Image)

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude-fast')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude-fast')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude-fast')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude-fast') || contains(github.event.issue.title, '@claude-fast')))
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}/dev-env:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
      actions: read
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update dependencies if needed
        run: |
          if [ -f package-lock.json ] && [ package-lock.json -nt node_modules/.package-lock.json ]; then
            npm ci
            cp package-lock.json node_modules/.package-lock.json
          fi

      - name: Run Claude Code
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          additional_permissions: |
            actions: read
          allowed_tools: |
            Bash(npm install),
            Bash(npm run *),
            Bash(npm test*),
            Bash(npm run lint*),
            Bash(pm2 *),
            Bash(git *),
            Bash(node *),
            Bash(npx *),
            Bash(ls *),
            Bash(pwd),
            Bash(which *),
            Bash(find *),
            Bash(grep *)
          custom_instructions: |
            This is a Node.js Telegram bot project with comprehensive testing infrastructure.
            - Use existing test scripts: npm test, npm run test:unit, npm run test:integration
            - Run linting with: npm run lint (fix with npm run lint:fix)
            - PM2 is available for process management if needed
            - Project follows TDD - write tests first for new features
            - All code must be in English only (project policy)
            - Run npm run test:failures to check for test failures
            - Git operations are extensively used via GitManager.js
            - This is the FAST version using pre-built Docker image
          claude_env: |
            NODE_ENV: test
            CI: true